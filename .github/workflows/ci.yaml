name: CI
on:
  push:
    branches:
      - master
      - staging
      - trying
  pull_request:
    branches: '**'

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Install rustfmt
        run: rustup +nightly-2020-03-22 component add rustfmt
      - name: Checkout repository
        uses: actions/checkout@v2.3.2
      - name: Check code formatting
        run: ./inspector fmt-check

  lint:
    runs-on: ubuntu-latest
    env:
      GRAPHICAL_BACKEND: vulkan
    steps:
      - name: Install clippy
        run: rustup component add clippy
      - name: Install Linux dependencies
        run: sudo apt-get update && sudo apt-get install libasound2-dev
      - name: Set up Rust toolchain
        run: rustup default ${{ matrix.toolchain }}
      - name: Checkout repository
        uses: actions/checkout@v2.3.2
      - name: Lint Rust code
        run: ./inspector clippy
      - name: Clean up clippy build artifacts
        run: rm -r target
      - name: Lint everything else
        uses: docker://github/super-linter:v3.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_BASH: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_JSON: true
          VALIDATE_MD: true
          VALIDATE_YAML: true

  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev libxcb-composite0-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Set up Rust toolchain
        run: rustup default ${{ matrix.toolchain }}
      - name: Checkout repository
        uses: actions/checkout@v2.3.2
      - name: Build project
        run: ./inspector build
        env:
          GRAPHICAL_BACKEND: ${{ matrix.GRAPHICAL_BACKEND }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        toolchain:
          - stable
          - beta
        experimental:
          - false
        include:
          - os: ubuntu-latest
            GRAPHICAL_BACKEND: vulkan
          - os: windows-latest
            GRAPHICAL_BACKEND: vulkan
          - os: macos-latest
            GRAPHICAL_BACKEND: metal
          - os: ubuntu-latest
            GRAPHICAL_BACKEND: vulkan
            toolchain: nightly
            experimental: true
          - os: windows-latest
            GRAPHICAL_BACKEND: vulkan
            toolchain: nightly
            experimental: true
          - os: macos-latest
            GRAPHICAL_BACKEND: metal
            toolchain: nightly
            experimental: true
    continue-on-error: ${{ matrix.experimental }}

  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev libxcb-composite0-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Set up Rust toolchain
        run: rustup default ${{ matrix.toolchain }}
      - name: Checkout repository
        uses: actions/checkout@v2.3.2
      - name: Test project
        run: ./inspector test
        env:
          GRAPHICAL_BACKEND: ${{ matrix.GRAPHICAL_BACKEND }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        toolchain:
          - stable
          - beta
        experimental:
          - false
        include:
          - os: ubuntu-latest
            GRAPHICAL_BACKEND: vulkan
          - os: windows-latest
            GRAPHICAL_BACKEND: vulkan
          - os: macos-latest
            GRAPHICAL_BACKEND: metal
          - os: ubuntu-latest
            GRAPHICAL_BACKEND: vulkan
            toolchain: nightly
            experimental: true
          - os: windows-latest
            GRAPHICAL_BACKEND: vulkan
            toolchain: nightly
            experimental: true
          - os: macos-latest
            GRAPHICAL_BACKEND: metal
            toolchain: nightly
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
